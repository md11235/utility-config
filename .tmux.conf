# $Id: screen-keys.conf,v 1.7 2010/07/31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix ^O
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients


# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^O
bind ^O last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind \
bind \ confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window -h

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

#unbind C-k
#bind -n C-k clear-history


###########################################


# basic settings
set-window-option -g mode-keys vi # vi key
set-option -g status-keys emacs
#set-window-option -g utf8 on # utf8 support
#set-window-option -g mode-mouse off # disable mouse

# copy mode to escape key
unbind [
bind Escape copy-mode
bind [ copy-mode

# move tmux copy buffer into x clipboard
bind-key C-y save-buffer /tmp/tmux-buffer \; run-shell "cat /tmp/tmux-buffer | xclip"

# splitting and cycling
#set-option -g mouse-select-pane off
unbind %
bind + split-window -h # horizontal split

bind _ split-window -v # vertical split

# window title
set-window-option -g automatic-rename on # auto name
set-option -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W #T' # window number,program name,active (or not)
#set-option -g set-titles-string '#(whoami)@#H:#S.#I.#P #W #T' # window number,program name, active(or not)
#set-option -g set-titles-string '(#W.#P #T)' # window number,program name,active (or not)

# messages
#set-window-option -g mode-bg magenta
#set-window-option -g mode-fg black
#set-option -g message-bg magenta
#set-option -g message-fg black

# No visual activity
set -g visual-activity off
set -g visual-bell off
#set -g bell-on-alert off
set -g bell-action none

#next tab
bind-key -n C-right next

#previous tab
bind-key -n C-left prev

# status bar
#set-option -g status-utf8 on
set-option -g status-justify centre
set-option -g status-bg black
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta] [#H] #[default]'
#set-option -g status-right '#[fg=cyan] #[fg=blue,bold]###S #[fg=magenta]%R %Y-%m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g status-right '#[default]#[fg=magenta][%R %Y-%m-%d]##[default]'
set-option -g visual-activity on
set-window-option -g monitor-activity on
#set-window-option -g window-status-current-bg blue
#set-window-option -g window-status-current-fg white
# set-option -g default-terminal screen-256color
set -g default-command 'zsh'
set -g default-shell '/bin/zsh'
set -g history-limit 10240

# clock
set-window-option -g clock-mode-colour cyan
set-window-option -g clock-mode-style 24


#set-window-option -g window-status-format '(#S:#I.#P #W #T)'
set-window-option -g window-status-format '#I.#P:#W#F'
set-window-option -g window-status-current-format '#I.#P:#W#F'

# if run as "tmux attach", create a session if one does not already exist
new-session -n $HOST /bin/zsh
